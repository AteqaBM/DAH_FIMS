// <auto-generated />
using System;
using DAH_FIMS.Model;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DAH_FIMS.Migrations
{
    [DbContext(typeof(DahFIMSDbContext))]
    [Migration("20210104084231_ReValidate")]
    partial class ReValidate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("DAH_FIMS.Model.CAADU_USER", b =>
                {
                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("EmployeeId");

                    b.HasIndex("UserId");

                    b.ToTable("CAADU_USER");
                });

            modelBuilder.Entity("DAH_FIMS.Model.COURSE", b =>
                {
                    b.Property<int>("CourseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("CourseCode")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("CourseCredits")
                        .HasColumnType("int");

                    b.Property<string>("CourseDetails")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CourseTitle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CourseType")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<int>("RequiredContactHours")
                        .HasColumnType("int");

                    b.HasKey("CourseId");

                    b.HasIndex("DepartmentId");

                    b.ToTable("COURSE");
                });

            modelBuilder.Entity("DAH_FIMS.Model.DEPARTMENT", b =>
                {
                    b.Property<int>("DepartmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("DepartmentName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("SchoolId")
                        .HasColumnType("int");

                    b.HasKey("DepartmentId");

                    b.HasIndex("SchoolId");

                    b.HasIndex(new[] { "DepartmentName" }, "IndexDepartmentName");

                    b.ToTable("DEPARTMENT");
                });

            modelBuilder.Entity("DAH_FIMS.Model.Databank", b =>
                {
                    b.Property<string>("DepartmentName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<bool>("IsItPartTime")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("PositionTitle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ReleaseDate")
                        .HasColumnType("date");

                    b.Property<string>("SchoolName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.ToView("Databank");
                });

            modelBuilder.Entity("DAH_FIMS.Model.EMPLOYEE", b =>
                {
                    b.Property<int>("EmployeeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<bool>("AcceptEmailNotification")
                        .HasColumnType("bit");

                    b.Property<int?>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<string>("EmailAdress")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<bool>("IsItPartTime")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int?>("OfficeId")
                        .HasColumnType("int");

                    b.Property<string>("PhoneExtension")
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)");

                    b.Property<int?>("PositionId")
                        .HasColumnType("int");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("EmployeeId");

                    b.HasIndex("DepartmentId");

                    b.HasIndex("OfficeId");

                    b.HasIndex("PositionId");

                    b.HasIndex("UserId");

                    b.HasIndex(new[] { "FirstName", "LastName", "DepartmentId" }, "IndexEmployeeDepartment");

                    b.HasIndex(new[] { "FirstName", "LastName" }, "IndexEmployeeName");

                    b.ToTable("EMPLOYEE");
                });

            modelBuilder.Entity("DAH_FIMS.Model.FACULTY", b =>
                {
                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ApplicationDate")
                        .IsRequired()
                        .HasColumnType("date");

                    b.Property<int?>("ConversionRate")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DateNeeded")
                        .IsRequired()
                        .HasColumnType("date");

                    b.Property<DateTime?>("DateOfBirth")
                        .IsRequired()
                        .HasColumnType("date");

                    b.Property<string>("Division")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("HighestEducation")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("HiringDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Institution")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("MobileNumber")
                        .IsRequired()
                        .HasMaxLength(14)
                        .HasColumnType("nvarchar(14)");

                    b.Property<string>("Nationality")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Rank")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("RecruitmentStatus")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime?>("ReleaseDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("RequiredLoad")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("TypeOfContract")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("EmployeeId");

                    b.ToTable("FACULTY");
                });

            modelBuilder.Entity("DAH_FIMS.Model.FACULTY_COURSE", b =>
                {
                    b.Property<int>("FacultyCourseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("AcademicYear")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("CourseId")
                        .HasColumnType("int");

                    b.Property<string>("CourseTeachingType")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<string>("Semester")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("TotalContactHours")
                        .HasColumnType("int");

                    b.HasKey("FacultyCourseId");

                    b.HasIndex("CourseId");

                    b.HasIndex("EmployeeId");

                    b.ToTable("FACULTY_COURSE");
                });

            modelBuilder.Entity("DAH_FIMS.Model.FacultiesList", b =>
                {
                    b.Property<string>("DepartmentName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<bool>("IsItPartTime")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("PositionTitle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RecruitmentStatus")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("SchoolName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.ToView("FacultiesList");
                });

            modelBuilder.Entity("DAH_FIMS.Model.Faculty_Information", b =>
                {
                    b.Property<string>("DepartmentName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Rank")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("Workload")
                        .HasColumnType("int");

                    b.ToView("Faculty_Information");
                });

            modelBuilder.Entity("DAH_FIMS.Model.Faculty_JobType", b =>
                {
                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<bool>("IsItPartTime")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.ToView("Faculty_JobType");
                });

            modelBuilder.Entity("DAH_FIMS.Model.Faculty_List", b =>
                {
                    b.Property<DateTime>("ApplicationDate")
                        .HasColumnType("date");

                    b.Property<int?>("ConversionRate")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateNeeded")
                        .HasColumnType("date");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("date");

                    b.Property<string>("Division")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("EmailAdress")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("HighestEducation")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("HiringDate")
                        .HasColumnType("date");

                    b.Property<string>("Institution")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsItPartTime")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("MobileNumber")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Nationality")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int>("PhoneExtension")
                        .HasColumnType("int");

                    b.Property<string>("Rank")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("RecruitmentStatus")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int?>("RequiredLoad")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("TypeOfContract")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.ToView("Faculty_List");
                });

            modelBuilder.Entity("DAH_FIMS.Model.GENERATE_NOTIFICATION", b =>
                {
                    b.Property<int>("NotificationId")
                        .HasColumnType("int");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.HasKey("NotificationId", "EmployeeId");

                    b.HasIndex("EmployeeId");

                    b.ToTable("GENERATE_NOTIFICATION");
                });

            modelBuilder.Entity("DAH_FIMS.Model.HIRING_DOCUMENT", b =>
                {
                    b.Property<int>("DocumentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime>("DocumentDate")
                        .HasColumnType("date");

                    b.Property<string>("DocumentFile")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("DocumentFormat")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("DocumentName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.HasKey("DocumentId");

                    b.HasIndex("EmployeeId");

                    b.HasIndex(new[] { "DocumentFile", "EmployeeId" }, "IndexHiringDocumentFacultyName");

                    b.ToTable("HIRING_DOCUMENTS");
                });

            modelBuilder.Entity("DAH_FIMS.Model.HR_USER", b =>
                {
                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("EmployeeId");

                    b.HasIndex("UserId");

                    b.ToTable("HR_USER");
                });

            modelBuilder.Entity("DAH_FIMS.Model.INFO_DESK_USER", b =>
                {
                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("EmployeeId");

                    b.HasIndex("UserId");

                    b.ToTable("INFO_DESK_USER");
                });

            modelBuilder.Entity("DAH_FIMS.Model.IT_USER", b =>
                {
                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("EmployeeId");

                    b.HasIndex("UserId");

                    b.ToTable("IT_USER");
                });

            modelBuilder.Entity("DAH_FIMS.Model.MAINTENANCE_USER", b =>
                {
                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("EmployeeId");

                    b.HasIndex("UserId");

                    b.ToTable("MAINTENANCE_USER");
                });

            modelBuilder.Entity("DAH_FIMS.Model.NOTIFICATION", b =>
                {
                    b.Property<int>("NotificationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("NotificationDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("NotificationTypeId")
                        .HasColumnType("int");

                    b.Property<int>("RequestId")
                        .HasColumnType("int");

                    b.Property<int>("WorkloadId")
                        .HasColumnType("int");

                    b.HasKey("NotificationId");

                    b.HasIndex("NotificationTypeId");

                    b.HasIndex("RequestId");

                    b.HasIndex("WorkloadId");

                    b.ToTable("NOTIFICATION");
                });

            modelBuilder.Entity("DAH_FIMS.Model.NOTIFICATION_TYPE", b =>
                {
                    b.Property<int>("NotificationTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("NotificationTypeId");

                    b.ToTable("NOTIFICATION_TYPE");
                });

            modelBuilder.Entity("DAH_FIMS.Model.OFFICE", b =>
                {
                    b.Property<int>("OfficeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("AvailableResources")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OfficeArea")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OfficeNumber")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("OfficeId");

                    b.ToTable("OFFICE");
                });

            modelBuilder.Entity("DAH_FIMS.Model.Office_Information", b =>
                {
                    b.Property<string>("AvailableResources")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DeliveryDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("OfficeNumber")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("ResourceType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.ToView("Office_Information");
                });

            modelBuilder.Entity("DAH_FIMS.Model.OfficesList", b =>
                {
                    b.Property<string>("AvailableResources")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<bool>("IsItPartTime")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("OfficeNumber")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("PositionTitle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.ToView("OfficesList");
                });

            modelBuilder.Entity("DAH_FIMS.Model.POSITION", b =>
                {
                    b.Property<int>("PositionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("PositionTitle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PositionId");

                    b.ToTable("POSITION");
                });

            modelBuilder.Entity("DAH_FIMS.Model.RECEIVE_NOTIFICATION", b =>
                {
                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<int>("NotificationId")
                        .HasColumnType("int");

                    b.HasKey("EmployeeId", "NotificationId");

                    b.HasIndex("NotificationId");

                    b.ToTable("RECEIVE_NOTIFICATION");
                });

            modelBuilder.Entity("DAH_FIMS.Model.REQUEST", b =>
                {
                    b.Property<int>("RequestId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime>("DeliveryDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OfficeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("RequestDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("ResourceQuantity")
                        .HasColumnType("int");

                    b.Property<string>("ResourceType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RequestId");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("OfficeId");

                    b.HasIndex(new[] { "RequestId", "ResourceQuantity", "DeliveryDateTime" }, "IndexRequestDeliveryDateTime");

                    b.ToTable("REQUEST");
                });

            modelBuilder.Entity("DAH_FIMS.Model.REQUEST_RESOURCE", b =>
                {
                    b.Property<int>("RequestId")
                        .HasColumnType("int");

                    b.Property<int>("ResourceId")
                        .HasColumnType("int");

                    b.HasKey("RequestId", "ResourceId");

                    b.HasIndex("ResourceId");

                    b.ToTable("REQUEST_RESOURCE");
                });

            modelBuilder.Entity("DAH_FIMS.Model.RESOURCE", b =>
                {
                    b.Property<int>("ResourceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("OfficeId")
                        .HasColumnType("int");

                    b.Property<string>("ResourceName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ResourceId");

                    b.HasIndex("OfficeId");

                    b.ToTable("RESOURCE");
                });

            modelBuilder.Entity("DAH_FIMS.Model.Requests_List", b =>
                {
                    b.Property<DateTime>("DeliveryDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("OfficeNumber")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<DateTime>("RequestDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("ResourceName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ResourceQuantity")
                        .HasColumnType("int");

                    b.ToView("Requests_List");
                });

            modelBuilder.Entity("DAH_FIMS.Model.SCHOOL", b =>
                {
                    b.Property<int>("SchoolId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("SchoolName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("SchoolId");

                    b.ToTable("SCHOOL");
                });

            modelBuilder.Entity("DAH_FIMS.Model.SECTION", b =>
                {
                    b.Property<int>("SectionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("AcademicYear")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<int>("FacultyCourseId")
                        .HasColumnType("int");

                    b.Property<string>("SectionDetails")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SectionNumber")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Semester")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("SectionId");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("FacultyCourseId");

                    b.ToTable("SECTION");
                });

            modelBuilder.Entity("DAH_FIMS.Model.SYSTEM_ADMIN", b =>
                {
                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("EmployeeId");

                    b.HasIndex("UserId");

                    b.ToTable("SYSTEM_ADMIN");
                });

            modelBuilder.Entity("DAH_FIMS.Model.SYSTEM_ADMIN_ASSISTANT", b =>
                {
                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("EmployeeId");

                    b.HasIndex("UserId");

                    b.ToTable("SYSTEM_ADMIN_ASSISTANT");
                });

            modelBuilder.Entity("DAH_FIMS.Model.SYSTEM_SUPERVISOR", b =>
                {
                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("EmployeeId");

                    b.HasIndex("UserId");

                    b.ToTable("SYSTEM_SUPERVISOR");
                });

            modelBuilder.Entity("DAH_FIMS.Model.SYSTEM_USER", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("UserId");

                    b.ToTable("SYSTEM_USERS");
                });

            modelBuilder.Entity("DAH_FIMS.Model.TAList", b =>
                {
                    b.Property<string>("DepartmentName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<bool>("IsItApproved")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("SectionId")
                        .HasColumnType("int");

                    b.Property<int>("Workload")
                        .HasColumnType("int");

                    b.ToView("TAList");
                });

            modelBuilder.Entity("DAH_FIMS.Model.TA_Information", b =>
                {
                    b.Property<string>("CourseTitle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("SectionNumber")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.ToView("TA_Information");
                });

            modelBuilder.Entity("DAH_FIMS.Model.TEACHER_ASSISTANT", b =>
                {
                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<int>("TotalContactHours")
                        .HasColumnType("int");

                    b.Property<int>("TotalCredit")
                        .HasColumnType("int");

                    b.HasKey("EmployeeId");

                    b.ToTable("TEACHER_ASSISTANT");
                });

            modelBuilder.Entity("DAH_FIMS.Model.WORKLOAD", b =>
                {
                    b.Property<int>("WorkloadId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("AcademicYear")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<bool>("IsItApproved")
                        .HasColumnType("bit");

                    b.Property<string>("LoadType")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Semester")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("Workload1")
                        .HasColumnType("int")
                        .HasColumnName("Workload");

                    b.HasKey("WorkloadId");

                    b.HasIndex("EmployeeId");

                    b.HasIndex(new[] { "Workload1", "LoadType", "EmployeeId" }, "IndexWorkload");

                    b.ToTable("WORKLOAD");
                });

            modelBuilder.Entity("DAH_FIMS.Model.WorkloadList", b =>
                {
                    b.Property<string>("DepartmentName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<bool>("IsItApproved")
                        .HasColumnType("bit");

                    b.Property<bool>("IsItPartTime")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("PositionTitle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Workload")
                        .HasColumnType("int");

                    b.ToView("WorkloadList");
                });

            modelBuilder.Entity("DAH_FIMS.Model.CAADU_USER", b =>
                {
                    b.HasOne("DAH_FIMS.Model.EMPLOYEE", "Employee")
                        .WithOne("CAADU_USER")
                        .HasForeignKey("DAH_FIMS.Model.CAADU_USER", "EmployeeId")
                        .HasConstraintName("FK_CAADU_USER_EMPLOYEE")
                        .IsRequired();

                    b.HasOne("DAH_FIMS.Model.SYSTEM_USER", "User")
                        .WithMany("CAADU_USERs")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK_CAADU_USER_SYSTEM_USERS");

                    b.Navigation("Employee");

                    b.Navigation("User");
                });

            modelBuilder.Entity("DAH_FIMS.Model.COURSE", b =>
                {
                    b.HasOne("DAH_FIMS.Model.DEPARTMENT", "Department")
                        .WithMany("COURSEs")
                        .HasForeignKey("DepartmentId")
                        .HasConstraintName("FK_COURSE_DEPARTMENT")
                        .IsRequired();

                    b.Navigation("Department");
                });

            modelBuilder.Entity("DAH_FIMS.Model.DEPARTMENT", b =>
                {
                    b.HasOne("DAH_FIMS.Model.SCHOOL", "School")
                        .WithMany("DEPARTMENTs")
                        .HasForeignKey("SchoolId")
                        .HasConstraintName("FK_DEPARTMENT_SCHOOL");

                    b.Navigation("School");
                });

            modelBuilder.Entity("DAH_FIMS.Model.EMPLOYEE", b =>
                {
                    b.HasOne("DAH_FIMS.Model.DEPARTMENT", "Department")
                        .WithMany("EMPLOYEEs")
                        .HasForeignKey("DepartmentId")
                        .HasConstraintName("FK_EMPLOYEE_DEPARTMENT");

                    b.HasOne("DAH_FIMS.Model.OFFICE", "Office")
                        .WithMany("EMPLOYEEs")
                        .HasForeignKey("OfficeId")
                        .HasConstraintName("FK_EMPLOYEE_OFFICE");

                    b.HasOne("DAH_FIMS.Model.POSITION", "Position")
                        .WithMany("EMPLOYEEs")
                        .HasForeignKey("PositionId")
                        .HasConstraintName("FK_EMPLOYEE_POSITION");

                    b.HasOne("DAH_FIMS.Model.SYSTEM_USER", "User")
                        .WithMany("EMPLOYEEs")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK_EMPLOYEE_SYSTEM_USERS");

                    b.Navigation("Department");

                    b.Navigation("Office");

                    b.Navigation("Position");

                    b.Navigation("User");
                });

            modelBuilder.Entity("DAH_FIMS.Model.FACULTY", b =>
                {
                    b.HasOne("DAH_FIMS.Model.EMPLOYEE", "Employee")
                        .WithOne("FACULTY")
                        .HasForeignKey("DAH_FIMS.Model.FACULTY", "EmployeeId")
                        .HasConstraintName("FK_FACULTY_EMPLOYEE")
                        .IsRequired();

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("DAH_FIMS.Model.FACULTY_COURSE", b =>
                {
                    b.HasOne("DAH_FIMS.Model.COURSE", "Course")
                        .WithMany("FACULTY_COURSEs")
                        .HasForeignKey("CourseId")
                        .HasConstraintName("FK_FACULTY_COURSE_COURSE")
                        .IsRequired();

                    b.HasOne("DAH_FIMS.Model.FACULTY", "Employee")
                        .WithMany("FACULTY_COURSEs")
                        .HasForeignKey("EmployeeId")
                        .HasConstraintName("FK_FACULTY_COURSE_FACULTY")
                        .IsRequired();

                    b.Navigation("Course");

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("DAH_FIMS.Model.GENERATE_NOTIFICATION", b =>
                {
                    b.HasOne("DAH_FIMS.Model.FACULTY", "Employee")
                        .WithMany("GENERATE_NOTIFICATIONs")
                        .HasForeignKey("EmployeeId")
                        .HasConstraintName("FK_GENERATE_NOTIFICATION_FACULTY")
                        .IsRequired();

                    b.HasOne("DAH_FIMS.Model.NOTIFICATION", "Notification")
                        .WithMany("GENERATE_NOTIFICATIONs")
                        .HasForeignKey("NotificationId")
                        .HasConstraintName("FK_GENERATE_NOTIFICATION_NOTIFICATION")
                        .IsRequired();

                    b.Navigation("Employee");

                    b.Navigation("Notification");
                });

            modelBuilder.Entity("DAH_FIMS.Model.HIRING_DOCUMENT", b =>
                {
                    b.HasOne("DAH_FIMS.Model.FACULTY", "Employee")
                        .WithMany("HIRING_DOCUMENTs")
                        .HasForeignKey("EmployeeId")
                        .HasConstraintName("FK_HIRING_DOCUMENTS_FACULTY")
                        .IsRequired();

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("DAH_FIMS.Model.HR_USER", b =>
                {
                    b.HasOne("DAH_FIMS.Model.EMPLOYEE", "Employee")
                        .WithOne("HR_USER")
                        .HasForeignKey("DAH_FIMS.Model.HR_USER", "EmployeeId")
                        .HasConstraintName("FK_HR_USER_EMPLOYEE")
                        .IsRequired();

                    b.HasOne("DAH_FIMS.Model.SYSTEM_USER", "User")
                        .WithMany("HR_USERs")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK_HR_USER_SYSTEM_USERS");

                    b.Navigation("Employee");

                    b.Navigation("User");
                });

            modelBuilder.Entity("DAH_FIMS.Model.INFO_DESK_USER", b =>
                {
                    b.HasOne("DAH_FIMS.Model.EMPLOYEE", "Employee")
                        .WithOne("INFO_DESK_USER")
                        .HasForeignKey("DAH_FIMS.Model.INFO_DESK_USER", "EmployeeId")
                        .HasConstraintName("FK_INFO_DESK_USER_EMPLOYEE")
                        .IsRequired();

                    b.HasOne("DAH_FIMS.Model.SYSTEM_USER", "User")
                        .WithMany("INFO_DESK_USERs")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK_INFO_DESK_USER_SYSTEM_USERS");

                    b.Navigation("Employee");

                    b.Navigation("User");
                });

            modelBuilder.Entity("DAH_FIMS.Model.IT_USER", b =>
                {
                    b.HasOne("DAH_FIMS.Model.EMPLOYEE", "Employee")
                        .WithOne("IT_USER")
                        .HasForeignKey("DAH_FIMS.Model.IT_USER", "EmployeeId")
                        .HasConstraintName("FK_IT_USER_EMPLOYEE")
                        .IsRequired();

                    b.HasOne("DAH_FIMS.Model.SYSTEM_USER", "User")
                        .WithMany("IT_USERs")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK_IT_USER_SYSTEM_USERS");

                    b.Navigation("Employee");

                    b.Navigation("User");
                });

            modelBuilder.Entity("DAH_FIMS.Model.MAINTENANCE_USER", b =>
                {
                    b.HasOne("DAH_FIMS.Model.EMPLOYEE", "Employee")
                        .WithOne("MAINTENANCE_USER")
                        .HasForeignKey("DAH_FIMS.Model.MAINTENANCE_USER", "EmployeeId")
                        .HasConstraintName("FK_MAINTENANCE_USER_EMPLOYEE")
                        .IsRequired();

                    b.HasOne("DAH_FIMS.Model.SYSTEM_USER", "User")
                        .WithMany("MAINTENANCE_USERs")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK_MAINTENANCE_USER_SYSTEM_USERS");

                    b.Navigation("Employee");

                    b.Navigation("User");
                });

            modelBuilder.Entity("DAH_FIMS.Model.NOTIFICATION", b =>
                {
                    b.HasOne("DAH_FIMS.Model.NOTIFICATION_TYPE", "NotificationType")
                        .WithMany("NOTIFICATIONs")
                        .HasForeignKey("NotificationTypeId")
                        .HasConstraintName("FK_NOTIFICATION_NOTIFICATION_TYPE")
                        .IsRequired();

                    b.HasOne("DAH_FIMS.Model.REQUEST", "Request")
                        .WithMany("NOTIFICATIONs")
                        .HasForeignKey("RequestId")
                        .HasConstraintName("FK_NOTIFICATION_REQUEST")
                        .IsRequired();

                    b.HasOne("DAH_FIMS.Model.WORKLOAD", "Workload")
                        .WithMany("NOTIFICATIONs")
                        .HasForeignKey("WorkloadId")
                        .HasConstraintName("FK_NOTIFICATION_WORKLOAD")
                        .IsRequired();

                    b.Navigation("NotificationType");

                    b.Navigation("Request");

                    b.Navigation("Workload");
                });

            modelBuilder.Entity("DAH_FIMS.Model.RECEIVE_NOTIFICATION", b =>
                {
                    b.HasOne("DAH_FIMS.Model.EMPLOYEE", "Employee")
                        .WithMany("RECEIVE_NOTIFICATIONs")
                        .HasForeignKey("EmployeeId")
                        .HasConstraintName("FK_RECEIVE_NOTIFICATION_EMPLOYEE")
                        .IsRequired();

                    b.HasOne("DAH_FIMS.Model.NOTIFICATION", "Notification")
                        .WithMany("RECEIVE_NOTIFICATIONs")
                        .HasForeignKey("NotificationId")
                        .HasConstraintName("FK_RECEIVE_NOTIFICATION_NOTIFICATION")
                        .IsRequired();

                    b.Navigation("Employee");

                    b.Navigation("Notification");
                });

            modelBuilder.Entity("DAH_FIMS.Model.REQUEST", b =>
                {
                    b.HasOne("DAH_FIMS.Model.SYSTEM_ADMIN", "Employee")
                        .WithMany("REQUESTs")
                        .HasForeignKey("EmployeeId")
                        .HasConstraintName("FK_REQUEST_SYSTEM_ADMIN")
                        .IsRequired();

                    b.HasOne("DAH_FIMS.Model.OFFICE", "Office")
                        .WithMany("REQUESTs")
                        .HasForeignKey("OfficeId")
                        .HasConstraintName("FK_REQUEST_OFFICE")
                        .IsRequired();

                    b.Navigation("Employee");

                    b.Navigation("Office");
                });

            modelBuilder.Entity("DAH_FIMS.Model.REQUEST_RESOURCE", b =>
                {
                    b.HasOne("DAH_FIMS.Model.REQUEST", "Request")
                        .WithMany("REQUEST_RESOURCEs")
                        .HasForeignKey("RequestId")
                        .HasConstraintName("FK_REQUEST_RESOURCE_REQUEST")
                        .IsRequired();

                    b.HasOne("DAH_FIMS.Model.RESOURCE", "Resource")
                        .WithMany("REQUEST_RESOURCEs")
                        .HasForeignKey("ResourceId")
                        .HasConstraintName("FK_REQUEST_RESOURCE_RESOURCE")
                        .IsRequired();

                    b.Navigation("Request");

                    b.Navigation("Resource");
                });

            modelBuilder.Entity("DAH_FIMS.Model.RESOURCE", b =>
                {
                    b.HasOne("DAH_FIMS.Model.OFFICE", "Office")
                        .WithMany("RESOURCEs")
                        .HasForeignKey("OfficeId")
                        .HasConstraintName("FK_RESOURCE_OFFICE")
                        .IsRequired();

                    b.Navigation("Office");
                });

            modelBuilder.Entity("DAH_FIMS.Model.SECTION", b =>
                {
                    b.HasOne("DAH_FIMS.Model.TEACHER_ASSISTANT", "Employee")
                        .WithMany("SECTIONs")
                        .HasForeignKey("EmployeeId")
                        .HasConstraintName("FK_SECTION_TEACHER_ASSISTANT")
                        .IsRequired();

                    b.HasOne("DAH_FIMS.Model.FACULTY_COURSE", "FacultyCourse")
                        .WithMany("SECTIONs")
                        .HasForeignKey("FacultyCourseId")
                        .HasConstraintName("FK_SECTION_FACULTY_COURSE1")
                        .IsRequired();

                    b.Navigation("Employee");

                    b.Navigation("FacultyCourse");
                });

            modelBuilder.Entity("DAH_FIMS.Model.SYSTEM_ADMIN", b =>
                {
                    b.HasOne("DAH_FIMS.Model.EMPLOYEE", "Employee")
                        .WithOne("SYSTEM_ADMIN")
                        .HasForeignKey("DAH_FIMS.Model.SYSTEM_ADMIN", "EmployeeId")
                        .HasConstraintName("FK_SYSTEM_ADMIN_EMPLOYEE")
                        .IsRequired();

                    b.HasOne("DAH_FIMS.Model.SYSTEM_USER", "User")
                        .WithMany("SYSTEM_ADMINs")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK_SYSTEM_ADMIN_SYSTEM_USERS");

                    b.Navigation("Employee");

                    b.Navigation("User");
                });

            modelBuilder.Entity("DAH_FIMS.Model.SYSTEM_ADMIN_ASSISTANT", b =>
                {
                    b.HasOne("DAH_FIMS.Model.EMPLOYEE", "Employee")
                        .WithOne("SYSTEM_ADMIN_ASSISTANT")
                        .HasForeignKey("DAH_FIMS.Model.SYSTEM_ADMIN_ASSISTANT", "EmployeeId")
                        .HasConstraintName("FK_SYSTEM_ADMIN_ASSISTANT_EMPLOYEE")
                        .IsRequired();

                    b.HasOne("DAH_FIMS.Model.SYSTEM_USER", "User")
                        .WithMany("SYSTEM_ADMIN_ASSISTANTs")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK_SYSTEM_ADMIN_ASSISTANT_SYSTEM_USERS");

                    b.Navigation("Employee");

                    b.Navigation("User");
                });

            modelBuilder.Entity("DAH_FIMS.Model.SYSTEM_SUPERVISOR", b =>
                {
                    b.HasOne("DAH_FIMS.Model.EMPLOYEE", "Employee")
                        .WithOne("SYSTEM_SUPERVISOR")
                        .HasForeignKey("DAH_FIMS.Model.SYSTEM_SUPERVISOR", "EmployeeId")
                        .HasConstraintName("FK_SYSTEM_SUPERVISOR_EMPLOYEE")
                        .IsRequired();

                    b.HasOne("DAH_FIMS.Model.SYSTEM_USER", "User")
                        .WithMany("SYSTEM_SUPERVISORs")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK_SYSTEM_SUPERVISOR_SYSTEM_USERS");

                    b.Navigation("Employee");

                    b.Navigation("User");
                });

            modelBuilder.Entity("DAH_FIMS.Model.TEACHER_ASSISTANT", b =>
                {
                    b.HasOne("DAH_FIMS.Model.EMPLOYEE", "Employee")
                        .WithOne("TEACHER_ASSISTANT")
                        .HasForeignKey("DAH_FIMS.Model.TEACHER_ASSISTANT", "EmployeeId")
                        .HasConstraintName("FK_TEACHER_ASSISTANT_EMPLOYEE")
                        .IsRequired();

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("DAH_FIMS.Model.WORKLOAD", b =>
                {
                    b.HasOne("DAH_FIMS.Model.FACULTY", "Employee")
                        .WithMany("WORKLOADs")
                        .HasForeignKey("EmployeeId")
                        .HasConstraintName("FK_WORKLOAD_FACULTY")
                        .IsRequired();

                    b.HasOne("DAH_FIMS.Model.SYSTEM_SUPERVISOR", "EmployeeNavigation")
                        .WithMany("WORKLOADs")
                        .HasForeignKey("EmployeeId")
                        .HasConstraintName("FK_WORKLOAD_SYSTEM_SUPERVISOR")
                        .IsRequired();

                    b.HasOne("DAH_FIMS.Model.TEACHER_ASSISTANT", "Employee1")
                        .WithMany("WORKLOADs")
                        .HasForeignKey("EmployeeId")
                        .HasConstraintName("FK_WORKLOAD_TEACHER_ASSISTANT")
                        .IsRequired();

                    b.Navigation("Employee");

                    b.Navigation("Employee1");

                    b.Navigation("EmployeeNavigation");
                });

            modelBuilder.Entity("DAH_FIMS.Model.COURSE", b =>
                {
                    b.Navigation("FACULTY_COURSEs");
                });

            modelBuilder.Entity("DAH_FIMS.Model.DEPARTMENT", b =>
                {
                    b.Navigation("COURSEs");

                    b.Navigation("EMPLOYEEs");
                });

            modelBuilder.Entity("DAH_FIMS.Model.EMPLOYEE", b =>
                {
                    b.Navigation("CAADU_USER");

                    b.Navigation("FACULTY");

                    b.Navigation("HR_USER");

                    b.Navigation("INFO_DESK_USER");

                    b.Navigation("IT_USER");

                    b.Navigation("MAINTENANCE_USER");

                    b.Navigation("RECEIVE_NOTIFICATIONs");

                    b.Navigation("SYSTEM_ADMIN");

                    b.Navigation("SYSTEM_ADMIN_ASSISTANT");

                    b.Navigation("SYSTEM_SUPERVISOR");

                    b.Navigation("TEACHER_ASSISTANT");
                });

            modelBuilder.Entity("DAH_FIMS.Model.FACULTY", b =>
                {
                    b.Navigation("FACULTY_COURSEs");

                    b.Navigation("GENERATE_NOTIFICATIONs");

                    b.Navigation("HIRING_DOCUMENTs");

                    b.Navigation("WORKLOADs");
                });

            modelBuilder.Entity("DAH_FIMS.Model.FACULTY_COURSE", b =>
                {
                    b.Navigation("SECTIONs");
                });

            modelBuilder.Entity("DAH_FIMS.Model.NOTIFICATION", b =>
                {
                    b.Navigation("GENERATE_NOTIFICATIONs");

                    b.Navigation("RECEIVE_NOTIFICATIONs");
                });

            modelBuilder.Entity("DAH_FIMS.Model.NOTIFICATION_TYPE", b =>
                {
                    b.Navigation("NOTIFICATIONs");
                });

            modelBuilder.Entity("DAH_FIMS.Model.OFFICE", b =>
                {
                    b.Navigation("EMPLOYEEs");

                    b.Navigation("REQUESTs");

                    b.Navigation("RESOURCEs");
                });

            modelBuilder.Entity("DAH_FIMS.Model.POSITION", b =>
                {
                    b.Navigation("EMPLOYEEs");
                });

            modelBuilder.Entity("DAH_FIMS.Model.REQUEST", b =>
                {
                    b.Navigation("NOTIFICATIONs");

                    b.Navigation("REQUEST_RESOURCEs");
                });

            modelBuilder.Entity("DAH_FIMS.Model.RESOURCE", b =>
                {
                    b.Navigation("REQUEST_RESOURCEs");
                });

            modelBuilder.Entity("DAH_FIMS.Model.SCHOOL", b =>
                {
                    b.Navigation("DEPARTMENTs");
                });

            modelBuilder.Entity("DAH_FIMS.Model.SYSTEM_ADMIN", b =>
                {
                    b.Navigation("REQUESTs");
                });

            modelBuilder.Entity("DAH_FIMS.Model.SYSTEM_SUPERVISOR", b =>
                {
                    b.Navigation("WORKLOADs");
                });

            modelBuilder.Entity("DAH_FIMS.Model.SYSTEM_USER", b =>
                {
                    b.Navigation("CAADU_USERs");

                    b.Navigation("EMPLOYEEs");

                    b.Navigation("HR_USERs");

                    b.Navigation("INFO_DESK_USERs");

                    b.Navigation("IT_USERs");

                    b.Navigation("MAINTENANCE_USERs");

                    b.Navigation("SYSTEM_ADMIN_ASSISTANTs");

                    b.Navigation("SYSTEM_ADMINs");

                    b.Navigation("SYSTEM_SUPERVISORs");
                });

            modelBuilder.Entity("DAH_FIMS.Model.TEACHER_ASSISTANT", b =>
                {
                    b.Navigation("SECTIONs");

                    b.Navigation("WORKLOADs");
                });

            modelBuilder.Entity("DAH_FIMS.Model.WORKLOAD", b =>
                {
                    b.Navigation("NOTIFICATIONs");
                });
#pragma warning restore 612, 618
        }
    }
}
