@page "/Office/Assign"

@layout ProvostLayout2

@using DAH_FIMS.Model
@using DAH_FIMS.Services
@using Microsoft.AspNetCore.Components.Forms


@inject OfficesService OffService
@inject EmployeeService EmpService
@inject FacultyService FacService
@inject NavigationManager NavigationManager
@inject DahFIMSDbContext db

<br />
<h4>Assign Office</h4>
<p>@message</p>
<br />
<form action="/" method="get" id="officeAssign">
    <fieldset>
        <EditForm Model="office" OnValidSubmit="Assignoffice">
            <DataAnnotationsValidator />
            <ValidationSummary />
            <div class="form-group row">
                <label for="first-name" class="col-sm-3 col-form-label">First Name:*</label>
                <div class="col-sm-5">
                    <InputText id="name" @bind-Value="employee.FirstName" class="form-control" placeholder="Enter Fisrt Name" />
                    <ValidationMessage For="@(() => employee.FirstName)" />
                </div>
            </div>

            <div class="form-group row">
                <label for="last-name" class="col-sm-3 col-form-label">Last Name:*</label>
                <div class="col-sm-5">
                    <InputText id="last-name" @bind-Value="employee.LastName" class="form-control" placeholder="Enter Last Name" />
                    <ValidationMessage For="@(() => employee.LastName)" />
                </div>
            </div>

            <div class="form-group row">
                <label for="positionTitle" class="col-sm-3 col-form-label">Position Title:*</label>
                <div class="col-sm-5">
                    <InputText id="positionTitle" @bind-Value="position.PositionTitle" class="form-control" placeholder="Enter Position Title" />
                    <ValidationMessage For="@(() => position.PositionTitle)" />
                </div>
            </div>

            <div class="form-group row">
                <label class="col-form-label col-sm-3 pt-0">Job Type:*</label>
                <div class="col-sm-7">
                    <div class="form-check form-check-inline">
                        <input class="form-check-input" type="radio" name="inlineRadioOptions" id="inlineRadio1" value="option1">
                        <label class="form-check-label" for="inlineRadio1">
                            Full-Time
                        </label>
                    </div>
                    <div class="form-check form-check-inline">
                        <input class="form-check-input" type="radio" name="inlineRadioOptions" id="inlineRadio2" value="option2">
                        <label class="form-check-label" for="inlineRadio2">
                            Part-Time
                        </label>
                    </div>
                </div>
            </div>

            <div class="form-group row">
                <label for="officeNumber" class="col-sm-3 col-form-label">Office Number:*</label>
                <div class="col-sm-5">
                    <InputText id="officeNumber" @bind-Value="office.OfficeNumber" class="form-control" />
                    <ValidationMessage For="@(() => office.OfficeNumber)" />
                </div>
            </div>

            <div class="form-group row">
                <label for="officeArea" class="col-sm-3 col-form-label">Office Area:*</label>
                <div class="col-sm-5">
                    <InputText id="officeArea" @bind-Value="office.OfficeArea" class="form-control" />
                    <ValidationMessage For="@(() => office.OfficeArea)" />
                </div>
            </div>

            <div class="form-group row">
                <label for="phoneExtension" class="col-sm-3 col-form-label">Phone Extension:*</label>
                <div class="col-sm-5">
                    <InputNumber id="phoneExtension" @bind-Value="employee.PhoneExtension" class="form-control" placeholder="Ext 230" />
                    <ValidationMessage For="@(() => employee.PhoneExtension)" />
                </div>
            </div>

            <div class="form-group row">
                <label for="availableResources" class="col-sm-3 col-form-label">Available Resources:*</label>
                <div class="col-sm-5">
                    <InputTextArea id="availableResources" raws="3" @bind-Value="office.AvailableResources" class="form-control" placeholder="List the Available Resources. If there is nothing type 'Nothing Available'" />
                    <ValidationMessage For="@(() => office.AvailableResources)" />
                    <br />
                    <br />
                    <div class="card" style="width: 315px">
                        <div class="card-header" style="text-align:center; background-color:#4d0000; color:white">
                            Available Resources Examples
                        </div>
                        <ul class="list-group list-group-flush">
                            <li class="list-group-item" style="text-align:center">Desk - Chairs - Cabinets - Door Sign  Phone - Computer - Printer</li>
                        </ul>
                    </div>
                </div>
            </div>
            <br />
            <br />
            <center>
                <button type="submit" class="button">Save</button>
                <a href="/Office/List" class="button" role="button">Cancel</a>
            </center>
        </EditForm>
    </fieldset>
</form>


@code {
    OFFICE office = new OFFICE();
    EMPLOYEE employee = new EMPLOYEE();
    POSITION position = new POSITION();

    string message;

    private void Assignoffice()
    {

        OffService.Assignoffice(office);

        message = "Office has been assigned successfully";

        // To empty the form, find more elegant way
        office = new OFFICE();

       
    }
}

    
