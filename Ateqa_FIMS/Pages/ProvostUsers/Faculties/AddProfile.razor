@*//This page to add faculty profile *@

@page "/Profile/Add"

@layout ProvostLayout2

@using DAH_FIMS.Model
@using DAH_FIMS.Services
@using Microsoft.AspNetCore.Components.Forms

@inject EmployeeService EmpService
@inject DepartmentService DepService
@inject PositionService PosService
@inject OfficesService OffService
@inject IFileUpload fileUpload

@inject DahFIMSDbContext db

<title>FIMS | Add Profile</title>

<br />
<h4>Add Profile</h4>
<br />
<form action="/" method="get" id="ProfileAdd">
    <fieldset>
        <EditForm Model="employee" OnValidSubmit="Addprofile">
            <DataAnnotationsValidator />
            <ValidationSummary />

            <div class="form-group row">
                <label for="firstName" class="col-sm-4 col-form-label"><b>First Name:*</b></label>
                <div class="col-sm-5">
                    <InputText type="text" id="firstName" @bind-Value="employee.FirstName" class="form-control" placeholder="Enter Fisrt Name" />
                    <ValidationMessage For="@(() => employee.FirstName)" />
                </div>
            </div>

            <div class="form-group row">
                <label for="lastName" class="col-sm-4 col-form-label"><b>Last Name:*</b></label>
                <div class="col-sm-5">
                    <InputText type="text" id="lastName" @bind-Value="employee.LastName" class="form-control" placeholder="Enter Last Name" />
                    <ValidationMessage For="@(() => employee.LastName)" />
                </div>
            </div>

            <div class="form-group row">
                <label for="emailAddress" class="col-sm-4 col-form-label"><b>Email Address:*</b></label>
                <div class="col-sm-5">
                    <InputText type="email" id="emailAddress" @bind-Value="employee.EmailAdress" class="form-control" placeholder="sam@example.com" />
                    <ValidationMessage For="@(() => employee.EmailAdress)" />
                </div>
            </div>

            <div class="form-group row">
                <label for="mobile" class="col-sm-4 col-form-label"><b>Mobile Number:*</b></label>
                <div class="col-sm-5">
                    <InputText id="mobile" @bind-Value="faculty.MobileNumber" class="form-control" placeholder="00966xxxxxxxxx" />
                    <ValidationMessage For="@(() => faculty.MobileNumber)" />
                </div>
            </div>

            <div class="form-group row">
                <label for="dateOfBirth" class="col-sm-4 col-form-label"><b>Date Of Birth:*</b></label>
                <div class="col-sm-5">
                    <InputDate id="dateOfBirth" @bind-Value="faculty.DateOfBirth" @bind-Value:format="yyyy-MM-dd" class="form-control" />
                    <ValidationMessage For="@(() => faculty.DateOfBirth)" />
                </div>
            </div>

            <div class="form-group row">
                <label for="status" class="col-sm-4 col-form-label"><b>Marital Status:*</b></label>
                <div class="col-sm-5">
                    <select @bind="faculty.Status" id="status" class="form-control">
                        <option value="">---Select Faculty Marital Status---</option>
                        @foreach (var status in Enum.GetNames(typeof(Status)))
                        {
                            <option>@status</option>
                        }
                    </select>
                    <ValidationMessage For="@(() => faculty.Status)" />
                </div>
            </div>

            <div class="form-group row">
                <label for="nationality" class="col-sm-4 col-form-label"><b>Nationality:*</b></label>
                <div class="col-sm-5">
                    <InputText type="text" id="nationality" @bind-Value="faculty.Nationality" class="form-control" />
                    <ValidationMessage For="@(() => faculty.Nationality)" />
                </div>
            </div>

            <div class="form-group row">
                <label for="rank" class="col-sm-4 col-form-label"><b>Rank:*</b></label>
                <div class="col-sm-5">
                    <select @bind="faculty.Rank" id="rank" class="form-control">
                        <option value="">---Select Faculty Rank---</option>
                        @foreach (var rank in Enum.GetNames(typeof(Rank)))
                        {
                            <option>@rank</option>
                        }
                    </select>
                    <ValidationMessage For="@(() => faculty.Rank)" />
                </div>
            </div>

            <div class="form-group row">
                <label for="highestEducation" class="col-sm-4 col-form-label"><b>Highest Education:*</b></label>
                <div class="col-sm-5">
                    <select @bind="faculty.HighestEducation" id="highestEducation" class="form-control">
                        <option value="">---Select Education Level---</option>
                        @foreach (var education in Enum.GetNames(typeof(HighestEducation)))
                        {
                            <option>@education</option>
                        }
                    </select>
                    <ValidationMessage For="@(() => faculty.HighestEducation)" />
                </div>
            </div>

            <div class="form-group row">
                <label for="other" class="col-sm-4 col-form-label"></label>
                <div class="col-sm-5">
                    <InputText type="text" id="other" @bind-Value="faculty.HighestEducation" class="form-control" placeholder="If Other, Specify" />
                </div>
            </div>

            <div class="form-group row">
                <label for="institution" class="col-sm-4 col-form-label"><b>Institution:*</b></label>
                <div class="col-sm-5">
                    <InputText type="text" id="institution" @bind-Value="faculty.Institution" class="form-control" />
                    <ValidationMessage For="@(() => faculty.Institution)" />
                </div>
            </div>

            <div class="form-group row">
                <label for="division" class="col-sm-4 col-form-label"><b>Division:*</b></label>
                <div class="col-sm-5">
                    <select @bind="faculty.Division" id="division" class="form-control">
                        <option value="">---Select a Division---</option>
                        @foreach (var division in Enum.GetNames(typeof(Division)))
                        {
                            <option>@division</option>
                        }
                    </select>
                    <ValidationMessage For="@(() => faculty.Division)" />
                </div>
            </div>

            <div class="form-group row">
                <label for="otherD" class="col-sm-4 col-form-label"></label>
                <div class="col-sm-5">
                    <InputText type="text" id="otherD" @bind-Value="faculty.Division" class="form-control" placeholder="If Other, Specify" />
                </div>
            </div>

            <div class="form-group row">
                <label for="position" class="col-sm-4 col-form-label"><b>Position Title:*</b></label>
                <div class="col-sm-5">
                    <InputSelect @bind-Value="positionId" id="position" class="form-control">
                        <option value="">---Select a Position---</option>
                        @foreach (var position in positions)
                        {
                            <option value="@position.PositionId">@position.PositionTitle</option>
                        }
                    </InputSelect>
                    <ValidationMessage For="@(() => position.PositionTitle)" />
                </div>
            </div>

            <div class="form-group row">
                <label for="schoolName" class="col-sm-4 col-form-label"><b>School Name:*</b></label>
                <div class="col-sm-5">
                    <select id="schoolName" class="form-control">
                        <option selected>---Select a School---</option>
                        <option>School of Business & Law</option>
                        <option>School of Design & Architecture</option>
                        <option>School of Health, Behavioral Sciences & Education</option>
                        <option>School of Engineering, Computing & Informatics</option>
                    </select>
                </div>
            </div>

            <div class="form-group row">
                <label for="department" class="col-sm-4 col-form-label"><b>Department Name:*</b></label>
                <div class="col-sm-5">
                    <InputSelect @bind-Value="departmentId" id="department" class="form-control">
                        <option value="">---Select a Department---</option>
                        @foreach (var department in departments)
                        {
                            <option value="@department.DepartmentId">@department.DepartmentName</option>
                        }
                    </InputSelect>
                    <ValidationMessage For="@(() => department.DepartmentName)" />
                </div>
            </div>

            <div class="form-group row">
                <label for="officeNumber" class="col-sm-4 col-form-label"><b>Office Number:*</b></label>
                <div class="col-sm-5">
                    <InputSelect @bind-Value="officeId" id="officeNumber" class="form-control">
                        <option value="">---Select an Office---</option>
                        @foreach (var office in offices)
                        {
                            <option value="@office.OfficeId">@office.OfficeNumber</option>
                        }
                    </InputSelect>
                    <ValidationMessage For="@(() => office.OfficeNumber)" />
                </div>
            </div>

            <div class="form-group row">
                <label for="phoneExtension" class="col-sm-4 col-form-label"><b>Phone Extension:*</b></label>
                <div class="col-sm-5">
                    <InputText id="phoneExtension" @bind-Value="employee.PhoneExtension" class="form-control" />
                    <ValidationMessage For="@(() => employee.PhoneExtension)" />
                </div>
            </div>

            <div class="form-group row">
                <label for="typeC" class="col-sm-4 col-form-label"><b>Type of Contract:*</b></label>
                <div class="col-sm-5">
                    <select @bind="faculty.TypeOfContract" id="typeC" class="form-control">
                        <option value="">---Select a Type---</option>
                        @foreach (var typeC in Enum.GetNames(typeof(TypeOfContract)))
                        {
                            <option>@typeC</option>
                        }
                    </select>
                    <ValidationMessage For="@(() => faculty.TypeOfContract)" />
                </div>
            </div>

            <div class="form-group row">
                <label for="otherT" class="col-sm-4 col-form-label"></label>
                <div class="col-sm-5">
                    <InputText type="text" id="otherT" @bind-Value="faculty.TypeOfContract" class="form-control" placeholder="If Other, Specify" />
                </div>
            </div>

            <div class="form-group row">
                <label for="dateNeeded" class="col-sm-4 col-form-label"><b>Date Needed:*</b></label>
                <div class="col-sm-5">
                    <InputDate id="dateNeeded" @bind-Value="faculty.DateNeeded" @bind-Value:format="yyyy-MM-dd" class="form-control" />
                    <ValidationMessage For="@(() => faculty.DateNeeded)" />
                </div>
            </div>

            <div class="form-group row">
                <label for="applicationDate" class="col-sm-4 col-form-label"><b>Application Date:*</b></label>
                <div class="col-sm-5">
                    <InputDate id="applicationDate" @bind-Value="faculty.ApplicationDate" @bind-Value:format="yyyy-MM-dd" class="form-control" />
                    <ValidationMessage For="@(() => faculty.ApplicationDate)" />
                </div>
            </div>

            <div class="form-group row">
                <label for="hiringDate" class="col-sm-4 col-form-label"><b>Hiring Date: </b></label>
                <div class="col-sm-5">
                    <InputDate id="hiringDate" @bind-Value="faculty.HiringDate" @bind-Value:format="yyyy-MM-dd" class="form-control" />
                </div>
            </div>

            <div class="form-group row">
                <label for="requiredLoad" class="col-sm-4 col-form-label"><b>Required Load:</b></label>
                <div class="col-sm-5">
                    <InputNumber id="requiredLoad" @bind-Value="faculty.RequiredLoad" class="form-control" />
                </div>
            </div>

            <div class="form-group row">
                <label for="conversionRate" class="col-sm-4 col-form-label"><b>Conversion Rate:</b></label>
                <div class="col-sm-5">
                    <InputNumber id="requiredLoad" @bind-Value="faculty.ConversionRate" class="form-control" />
                </div>
            </div>

            <div class="form-group row">
                <label for="reqruitmentStatus" class="col-sm-4 col-form-label"><b>Reqruitment Status:*</b></label>
                <div class="col-sm-5">
                    <select @bind="faculty.RecruitmentStatus" id="reqruitmentStatus" class="form-control">
                        <option value="">---Select Profile Status---</option>
                        @foreach (var reqruitmentStatus in Enum.GetNames(typeof(ReqrutimentStatus)))
                        {
                            <option>@reqruitmentStatus</option>
                        }
                    </select>
                    <ValidationMessage For="@(() => faculty.RecruitmentStatus)" />
                </div>
            </div>

            <div class="form-group row">
                <label for="releaseDate" class="col-sm-4 col-form-label"><b>Relesse Date: </b></label>
                <div class="col-sm-5">
                    <InputDate id="releaseDate" @bind-Value="faculty.ReleaseDate" @bind-Value:format="yyyy-MM-dd" class="form-control" />
                </div>
            </div>

            <div class="form-group row">
                <label for="hiringDocuments" class="col-sm-4 col-form-label"><b>Hiring Documents Copy:*</b></label>
                <div class="col-sm-5">
                    <InputFile OnChange="HandelFileSelected" @bind-Value="faculty.HIRING_DOCUMENTs"></InputFile>
                    @if (file != null)
                    {
                        <p>Name: @file.Name</p>
                        <p>Size in Bytes: @file.Size</p>
                        <p>File type: @file.Type</p>
                    }
                    <ValidationMessage For="@(() => faculty.HIRING_DOCUMENTs)" />
                </div>
            </div>
    <br />
            <center><p>------------------------------------------------------------------------------</p></center>

            <div class="form-group row">
                <label for="partTime" class="col-sm-4 col-form-label">
                    <b>Is it Part Time:*</b><br />
                    (If Yes Check the Box)
                </label>
                <div class="col-sm-7">
                    <InputCheckbox id="partTime" @bind-Value="employee.IsItPartTime" />
                </div>
            </div>

            <div class="form-group row">
                <label for="acceptNotification" class="col-sm-4 col-form-label">
                    <b>Accept Email Notification:*</b><br />
                    (If Yes Check the Box)
                </label>
                <div class="col-sm-7">
                    <InputCheckbox id="acceptNotification" @bind-Value="employee.AcceptEmailNotification" />
                </div>
            </div>
            <br />
            <br />
            <center>
                <button type="submit" class="button">Save</button>
                <a href="/Faculty/List" class="button" role="button">Cancel</a>
            </center>
            @*<a href="ProfileTwo/Add/" style="position:absolute; right:300px"><span class="oi oi-arrow-circle-right"></span></a>*@
        </EditForm>
        <br />
        <center><p>@message</p></center>
    </fieldset>
</form>
<br />


@code {

    string message;

    EMPLOYEE employee = new EMPLOYEE();
    DEPARTMENT department = new DEPARTMENT();
    POSITION position = new POSITION();
    OFFICE office = new OFFICE();
    FACULTY faculty = new FACULTY();

    // Needed to get attributes of each table
    private List<EMPLOYEE> employees = new List<EMPLOYEE>();
    private List<DEPARTMENT> departments = new List<DEPARTMENT>();
    private List<POSITION> positions = new List<POSITION>();
    private List<OFFICE> offices = new List<OFFICE>();


    // Check why employee.departmentId, positionId, officeId does not bind
    private string departmentId = String.Empty;
    private string positionId = String.Empty;
    private string officeId = String.Empty;

    //Execute when component starts / initializes
    protected override void OnInitialized()
    {
        employees = EmpService.GetEmployees();
        departments = DepService.GetDepartments();
        positions = PosService.GetPositions();
        offices = OffService.GetOffices();
    }

    // Add part 1 of the profile
    public void Addprofile()
    {
        // Convert departmentId from string to int
        if (!String.IsNullOrEmpty(departmentId))
        {
            employee.DepartmentId = Int32.Parse(departmentId);
        }

        // Convert positionId from string to int
        if (!String.IsNullOrEmpty(positionId))
        {
            employee.PositionId = Int32.Parse(positionId);
        }

        // Convert officeId from string to int
        if (!String.IsNullOrEmpty(officeId))
        {
            employee.OfficeId = Int32.Parse(officeId);
        }

        EmpService.Addprofile(employee);

        message = "Profile has been added successfully";
    }

    //Code for upload file filed

    IFileListEntry file;
    async Task HandelFileSelected(IFileListEntry[] files)
    {
        file = files.FirstOrDefault();
        if (file != null)
        {
            await fileUpload.UploadAsync(file);
        }
    }
}