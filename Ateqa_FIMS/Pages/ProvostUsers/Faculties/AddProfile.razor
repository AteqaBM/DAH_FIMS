@page "/Profile/Add"

@layout ProvostLayout2

@using DAH_FIMS.Model
@using DAH_FIMS.Services
@using Microsoft.AspNetCore.Components.Forms

@inject EmployeeService EmpService
@inject DepartmentService DepService
@inject FacultyService FacService
@inject SchoolService SchService
@inject PositionService PosService
@inject OfficesService OffService
@inject NavigationManager NavigationManager


@inject DahFIMSDbContext db

<br />
<h4>Add Profile</h4>
<br />
<form action="/" method="get" id="ProfileAdd">
    <fieldset>
        <EditForm Model="employee" OnValidSubmit="Addprofile">
            <DataAnnotationsValidator />
            <ValidationSummary />

            <div class="form-group row">
                <label for="firstName" class="col-sm-3 col-form-label">First Name:*</label>
                <div class="col-sm-5">
                    <InputText type="text" id="firstName" @bind-Value="employee.FirstName" class="form-control" placeholder="Enter Fisrt Name" />
                    <ValidationMessage For="@(() => employee.FirstName)" />
                </div>
            </div>

            <div class="form-group row">
                <label for="lastName" class="col-sm-3 col-form-label">Last Name:*</label>
                <div class="col-sm-5">
                    <InputText type="text" id="lastName" @bind-Value="employee.LastName" class="form-control" placeholder="Enter Last Name" />
                    <ValidationMessage For="@(() => employee.LastName)" />
                </div>
            </div>

            <div class="form-group row">
                <label for="mobile" class="col-sm-3 col-form-label">Mobile Number:*</label>
                <div class="col-sm-5">
                    <InputText id="mobile" @bind-Value="faculty.MobileNumber" class="form-control" placeholder="00966000000000" />
                    <ValidationMessage For="@(() => faculty.MobileNumber)" />
                </div>
            </div>

            <div class="form-group row">
                <label for="emailAddress" class="col-sm-3 col-form-label">Email Address:*</label>
                <div class="col-sm-5">
                    <InputText type="email" id="emailAddress" @bind-Value="employee.EmailAdress" class="form-control" placeholder="sam@example.com" />
                    <ValidationMessage For="@(() => employee.EmailAdress)" />
                </div>
            </div>

            <div class="form-group row">
                <label for="dateOfBirth" class="col-sm-3 col-form-label">Date Of Birth:*</label>
                <div class="col-sm-5">
                    <InputDate id="dateOfBirth" @bind-Value="faculty.DateOfBirth" @bind-Value:format="yyyy-MM-dd" class="form-control" />
                    <ValidationMessage For="@(() => faculty.DateOfBirth)" />
                </div>
            </div>

            <div class="form-group row">
                <label class="col-form-label col-sm-3 pt-0">Marital status:*</label>
                <div class="col-sm-7">
                    <div class="form-check form-check-inline">
                        <input class="form-check-input" type="radio" name="inlineRadioOptions" id="inlineRadio1" value="option1">
                        <label class="form-check-label" for="inlineRadio1">
                            Single
                        </label>
                    </div>
                    <div class="form-check form-check-inline">
                        <input class="form-check-input" type="radio" name="inlineRadioOptions" id="inlineRadio2" value="option2">
                        <label class="form-check-label" for="inlineRadio2">
                            Married
                        </label>
                    </div>
                </div>
            </div>

            <div class="form-group row">
                <label for="nationality" class="col-sm-3 col-form-label">Nationality:*</label>
                <div class="col-sm-5">
                    <InputText type="text" id="nationality" @bind-Value="faculty.Nationality" class="form-control" />
                    <ValidationMessage For="@(() => faculty.Nationality)" />
                </div>
            </div>

            <div class="form-group row">
                <label for="highestEducation" class="col-sm-3 col-form-label">Highest Education:*</label>
                <div class="col-sm-5">
                    <InputText type="text" id="highestEducation" @bind-Value="faculty.HighestEducation" class="form-control" />
                    <ValidationMessage For="@(() => faculty.HighestEducation)" />
                </div>
            </div>

            <div class="form-group row">
                <label for="institution" class="col-sm-3 col-form-label">Institution:*</label>
                <div class="col-sm-5">
                    <InputText type="text" id="institution" @bind-Value="faculty.Institution" class="form-control" />
                    <ValidationMessage For="@(() => faculty.Institution)" />
                </div>
            </div>

            <div class="form-group row">
                <label for="division" class="col-sm-3 col-form-label">Division:*</label>
                <div class="col-sm-5">
                    <InputText type="text" id="division" @bind-Value="faculty.Division" class="form-control" />
                    <ValidationMessage For="@(() => faculty.Division)" />
                </div>
            </div>

            <div class="form-group row">
                <label for="schoolName" class="col-sm-3 col-form-label">School Name:*</label>
                <div class="col-sm-5">
                    <select id="schoolName" class="form-control">
                        <option selected>---Select a School---</option>
                        <option>School of Business & Law</option>
                        <option>School of Design & Architecture</option>
                        <option>School of Health, Behavioral Sciences & Education</option>
                        <option>School of Engineering, Computing & Informatics</option>
                    </select>
                </div>
            </div>
            <br />

            <div class="form-group row">
                <label for="department" class="col-sm-3 col-form-label">Department Name:*</label>
                <div class="col-sm-5">
                    <InputSelect @bind-Value="departmentId" id="department" class="form-control">
                        <option value="">---Select a Department---</option>
                        @foreach (var department in departments)
                        {
                            <option value="@department.DepartmentId">@department.DepartmentName</option>
                        }
                    </InputSelect>
                </div>
            </div>

            @*<div class="form-group row">
                    <label for="positionTitle" class="col-sm-3 col-form-label">Position Title:*</label>
                    <div class="col-sm-5">
                        <InputText type="text" id="positionTitle" @bind-Value="employee.Position.PositionTitle" class="form-control" />
                        <ValidationMessage For="@(() => employee.Position.PositionTitle)" />
                    </div>
                </div>*@

            <div class="form-group row">
                <label for="typeOfContract" class="col-sm-3 col-form-label">Type of Contract:*</label>
                <div class="col-sm-5">
                    <InputText type="text" id="typeOfContract" @bind-Value="faculty.TypeOfContract" class="form-control" />
                    <ValidationMessage For="@(() => faculty.TypeOfContract)" />
                </div>
            </div>

            <div class="form-group row">
                <label for="phoneExtension" class="col-sm-3 col-form-label">Phone Extension:*</label>
                <div class="col-sm-5">
                    <InputNumber id="phoneExtension" @bind-Value="employee.PhoneExtension" class="form-control" />
                    <ValidationMessage For="@(() => employee.PhoneExtension)" />
                </div>
            </div>

            @*<div class="form-group row">
                    <label for="officeNumber" class="col-sm-3 col-form-label">Office Number</label>
                    <div class="col-sm-5">
                        <InputText id="officeNumber" @bind-Value="office.OfficeNumber" class="form-control" />
                        <ValidationMessage For="@(() => office.OfficeNumber)" />
                    </div>
                </div>*@

            <div class="form-group row">
                <label for="dateNeeded" class="col-sm-3 col-form-label">Date Needed:*</label>
                <div class="col-sm-5">
                    <InputDate id="dateNeeded" @bind-Value="faculty.DateNeeded" @bind-Value:format="yyyy-MM-dd" class="form-control" />
                    <ValidationMessage For="@(() => faculty.DateNeeded)" />
                </div>
            </div>

            <div class="form-group row">
                <label for="reqruitmentStatus" class="col-sm-3 col-form-label">Reqruitment Status:*</label>
                <div class="col-sm-5">
                    <select @bind="faculty.RecruitmentStatus" id="reqruitmentStatus" class="form-control">
                        <option value="">---Select Profile Status---</option>
                        @foreach (var reqruitmentStatus in Enum.GetNames(typeof(ReqrutimentStatus)))
                        {
                            <option>@reqruitmentStatus</option>
                        }
                    </select>
                </div>
            </div>

            <div class="form-group row">
                <label for="applicationDate" class="col-sm-3 col-form-label">Application Date:*</label>
                <div class="col-sm-5">
                    <InputDate id="applicationDate" @bind-Value="faculty.ApplicationDate" @bind-Value:format="yyyy-MM-dd" class="form-control" />
                    <ValidationMessage For="@(() => faculty.ApplicationDate)" />
                </div>
            </div>

            <div class="form-group row">
                <label for="hiringDate" class="col-sm-3 col-form-label">Hiring Date: </label>
                <div class="col-sm-5">
                    <InputDate id="hiringDate" @bind-Value="faculty.HiringDate" @bind-Value:format="yyyy-MM-dd" class="form-control" />
                    <ValidationMessage For="@(() => faculty.ApplicationDate)" />
                </div>
            </div>

            <div class="form-group row">
                <label for="rank" class="col-sm-3 col-form-label">Rank:*</label>
                <div class="col-sm-5">
                    <select @bind="faculty.Rank" id="rank" class="form-control">
                        <option value="">---Select Faculty Rank---</option>
                        @foreach (var rank in Enum.GetNames(typeof(Rank)))
                        {
                            <option>@rank</option>
                        }
                    </select>
                </div>
            </div>

            <div class="form-group row">
                <label for="requiredLoad" class="col-sm-3 col-form-label">Required Load:</label>
                <div class="col-sm-5">
                    <InputNumber id="requiredLoad" @bind-Value="faculty.RequiredLoad" class="form-control" />
                    <ValidationMessage For="@(() => faculty.RequiredLoad)" />
                </div>
            </div>

            <div class="form-group row">
                <label for="conversionRate" class="col-sm-3 col-form-label">Conversion Rate:</label>
                <div class="col-sm-5">
                    <InputNumber id="requiredLoad" @bind-Value="faculty.ConversionRate" class="form-control" />
                    <ValidationMessage For="@(() => faculty.ConversionRate)" />
                </div>
            </div>

            <div class="form-group row">
                <label for="releaseDate" class="col-sm-3 col-form-label">Relesse Date: </label>
                <div class="col-sm-5">
                    <InputDate id="releaseDate" @bind-Value="faculty.ReleaseDate" @bind-Value:format="yyyy-MM-dd" class="form-control" />
                    <ValidationMessage For="@(() => faculty.ReleaseDate)" />
                </div>
            </div>

            <div class="form-group row">
                <label for="hiringDocuments" class="col-sm-3 col-form-label">Hiring Documents Copy:*</label>
                <div class="col-sm-5">
                    <div class="custom-file">
                        <input type="file" class="custom-file-input" id="customFile">
                        <label class="custom-file-label" for="customFile">Choose file</label>
                    </div>
                </div>
            </div>
            <br />
            <br />

            <center>
                <button type="submit" class="button">Save</button>
                <a href="/Faculty/List" class="button" role="button">Cancel</a>
            </center>
        </EditForm>
    </fieldset>
</form>





@code {

    EMPLOYEE employee = new EMPLOYEE();
    FACULTY faculty = new FACULTY();
    DEPARTMENT department = new DEPARTMENT();
    POSITION position = new POSITION();
    OFFICE office = new OFFICE();

    // Needed to get attributes of each table
    private List<EMPLOYEE> employees = new List<EMPLOYEE>();
    private List<FACULTY> faculties = new List<FACULTY>();
    private List<DEPARTMENT> departments = new List<DEPARTMENT>();
    private List<POSITION> positions = new List<POSITION>();
    private List<OFFICE> offices = new List<OFFICE>();

    [Parameter]
    public int Id { get; set; }

    //Execute when component starts / initializes
    protected override void OnInitialized()
    {
        employees = EmpService.GetEmployees();
        faculties = FacService.GetFaculties();
        departments = DepService.GetDepartments();
        positions = PosService.GetPositions();
        offices = OffService.GetOffices();

    }

    // Check why employee.departmentId does not bind
    private string departmentId = String.Empty;

    private void Addprofile()
    {
        // Convert departmentId from string to int
        if (!String.IsNullOrEmpty(departmentId))
        {
            employee.DepartmentId = Int32.Parse(departmentId);
        }

        EmpService.Addprofile(employee);

        // To empty the form, find more elegant way
        employee = new EMPLOYEE();

        // May navigate to the Faculty/List component
        NavigationManager.NavigateTo("Faculty/List");
    }
}
