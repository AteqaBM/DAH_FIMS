@*//This page to add a new faculty profile in the databse with its information*@

@page "/ProfileTwo/Edit"

@layout ProvostLayout2

@using DAH_FIMS.Model
@using DAH_FIMS.Services
@using Microsoft.AspNetCore.Components.Forms
@using Syncfusion.Blazor.Inputs
@inject EmployeeService EmpService
@inject DepartmentService DepService
@inject FacultyService FacService
@inject SchoolService SchService
@inject PositionService PosService
@inject OfficesService OffService
@inject IFileUpload fileUpload

@inject DahFIMSDbContext db

<title>FIMS | Edit Profile(P2)</title>

<br />
<h4>Add Profile</h4>
<br />
<br />

@*<div style="float: left">
    <p>Edit the first part of the faculty information from add button if it is not existed in the Faculty Name dropdown list</p>
</div>

<div style="float: right">
    <a href="ProfileOne/Add"><span class="oi oi-plus"></span></a>&nbsp;
    <b>Add Profile(P1)</b>
</div><div style="clear: both;"></div>
<br />*@

<form action="/" method="get" id="ProfileAdd">
    <fieldset>
        <EditForm Model="faculty" OnValidSubmit="EditFaculty">
            <DataAnnotationsValidator />
            <ValidationSummary />

            <div class="form-group row">
                <label for="employee" class="col-sm-3 col-form-label"><b>Faculty Name:*</b></label>
                <div class="col-sm-5">
                    <InputSelect @bind-Value="faculty.EmployeeId" id="employee" class="form-control">
                        <option value="">---Select a Faculty---</option>
                        @foreach (var employee in employees)
                        {
                            <option value="@employee.EmployeeId">@employee.FirstName @employee.LastName</option>
                        }
                    </InputSelect>
                    <ValidationMessage For="@(() => employee.EmployeeId)" />
                </div>
            </div>

            <div class="form-group row">
                <label for="mobile" class="col-sm-3 col-form-label"><b>Mobile Number:*</b></label>
                <div class="col-sm-5">
                    <InputText id="mobile" @bind-Value="faculty.MobileNumber" class="form-control" placeholder="00966xxxxxxxxx" />
                    <ValidationMessage For="@(() => faculty.MobileNumber)" />
                </div>
            </div>

            <div class="form-group row">
                <label for="dateOfBirth" class="col-sm-3 col-form-label"><b>Date Of Birth:*</b></label>
                <div class="col-sm-5">
                    <InputDate id="dateOfBirth" @bind-Value="faculty.DateOfBirth" @bind-Value:format="yyyy-MM-dd" class="form-control" />
                    <ValidationMessage For="@(() => faculty.DateOfBirth)" />
                </div>
            </div>

            <div class="form-group row">
                <label for="status" class="col-sm-3 col-form-label"><b>Marital Status:*</b></label>
                <div class="col-sm-5">
                    <select @bind="faculty.Status" id="status" class="form-control">
                        <option value="">---Select Faculty Marital Status---</option>
                        @foreach (var status in Enum.GetNames(typeof(Status)))
                        {
                            <option>@status</option>
                        }
                    </select>
                    <ValidationMessage For="@(() => faculty.Status)" />
                </div>
            </div>

            <div class="form-group row">
                <label for="nationality" class="col-sm-3 col-form-label"><b>Nationality:*</b></label>
                <div class="col-sm-5">
                    <InputText type="text" id="nationality" @bind-Value="faculty.Nationality" class="form-control" />
                    <ValidationMessage For="@(() => faculty.Nationality)" />
                </div>
            </div>

            <div class="form-group row">
                <label for="rank" class="col-sm-3 col-form-label"><b>Rank:*</b></label>
                <div class="col-sm-5">
                    <select @bind="faculty.Rank" id="rank" class="form-control">
                        <option value="">---Select Faculty Rank---</option>
                        @foreach (var rank in Enum.GetNames(typeof(Rank)))
                        {
                            <option>@rank</option>
                        }
                    </select>
                    <ValidationMessage For="@(() => faculty.Rank)" />
                </div>
            </div>

            <div class="form-group row">
                <label for="highestEducation" class="col-sm-3 col-form-label"><b>Highest Education:*</b></label>
                <div class="col-sm-5">
                    <select @bind="faculty.HighestEducation" id="highestEducation" class="form-control">
                        <option value="">---Select Education Level---</option>
                        @foreach (var education in Enum.GetNames(typeof(HighestEducation)))
                        {
                            <option>@education</option>
                        }
                    </select>
                    <ValidationMessage For="@(() => faculty.HighestEducation)" />
                </div>
            </div>

            <div class="form-group row">
                <label for="other" class="col-sm-3 col-form-label"></label>
                <div class="col-sm-5">
                    <InputText type="text" id="other" @bind-Value="faculty.HighestEducation" class="form-control" placeholder="If Other, Specify" />
                </div>
            </div>

            <div class="form-group row">
                <label for="institution" class="col-sm-3 col-form-label"><b>Institution:*</b></label>
                <div class="col-sm-5">
                    <InputText type="text" id="institution" @bind-Value="faculty.Institution" class="form-control" />
                    <ValidationMessage For="@(() => faculty.Institution)" />
                </div>
            </div>

            <div class="form-group row">
                <label for="division" class="col-sm-3 col-form-label"><b>Division:*</b></label>
                <div class="col-sm-5">
                    <select @bind="faculty.Division" id="division" class="form-control">
                        <option value="">---Select a Division---</option>
                        @foreach (var division in Enum.GetNames(typeof(Division)))
                        {
                            <option>@division</option>
                        }
                    </select>
                    <ValidationMessage For="@(() => faculty.Division)" />
                </div>
            </div>

            <div class="form-group row">
                <label for="otherD" class="col-sm-3 col-form-label"></label>
                <div class="col-sm-5">
                    <InputText type="text" id="otherD" @bind-Value="faculty.Division" class="form-control" placeholder="If Other, Specify" />
                </div>
            </div>

            <div class="form-group row">
                <label for="typeC" class="col-sm-3 col-form-label"><b>Type of Contract:*</b></label>
                <div class="col-sm-5">
                    <select @bind="faculty.TypeOfContract" id="typeC" class="form-control">
                        <option value="">---Select a Type---</option>
                        @foreach (var typeC in Enum.GetNames(typeof(TypeOfContract)))
                        {
                            <option>@typeC</option>
                        }
                    </select>
                    <ValidationMessage For="@(() => faculty.TypeOfContract)" />
                </div>
            </div>

            <div class="form-group row">
                <label for="otherT" class="col-sm-3 col-form-label"></label>
                <div class="col-sm-5">
                    <InputText type="text" id="otherT" @bind-Value="faculty.TypeOfContract" class="form-control" placeholder="If Other, Specify" />
                </div>
            </div>

            <div class="form-group row">
                <label for="dateNeeded" class="col-sm-3 col-form-label"><b>Date Needed:*</b></label>
                <div class="col-sm-5">
                    <InputDate id="dateNeeded" @bind-Value="faculty.DateNeeded" @bind-Value:format="yyyy-MM-dd" class="form-control" />
                    <ValidationMessage For="@(() => faculty.DateNeeded)" />
                </div>
            </div>

            <div class="form-group row">
                <label for="applicationDate" class="col-sm-3 col-form-label"><b>Application Date:*</b></label>
                <div class="col-sm-5">
                    <InputDate id="applicationDate" @bind-Value="faculty.ApplicationDate" @bind-Value:format="yyyy-MM-dd" class="form-control" />
                    <ValidationMessage For="@(() => faculty.ApplicationDate)" />
                </div>
            </div>

            <div class="form-group row">
                <label for="hiringDate" class="col-sm-3 col-form-label"><b>Hiring Date: </b></label>
                <div class="col-sm-5">
                    <InputDate id="hiringDate" @bind-Value="faculty.HiringDate" @bind-Value:format="yyyy-MM-dd" class="form-control" />
                </div>
            </div>

            <div class="form-group row">
                <label for="requiredLoad" class="col-sm-3 col-form-label"><b>Required Load:</b></label>
                <div class="col-sm-5">
                    <InputNumber id="requiredLoad" @bind-Value="faculty.RequiredLoad" class="form-control" />
                </div>
            </div>

            <div class="form-group row">
                <label for="conversionRate" class="col-sm-3 col-form-label"><b>Conversion Rate:</b></label>
                <div class="col-sm-5">
                    <InputNumber id="requiredLoad" @bind-Value="faculty.ConversionRate" class="form-control" />
                </div>
            </div>

            <div class="form-group row">
                <label for="reqruitmentStatus" class="col-sm-3 col-form-label"><b>Reqruitment Status:*</b></label>
                <div class="col-sm-5">
                    <select @bind="faculty.RecruitmentStatus" id="reqruitmentStatus" class="form-control">
                        <option value="">---Select Profile Status---</option>
                        @foreach (var reqruitmentStatus in Enum.GetNames(typeof(ReqrutimentStatus)))
                        {
                            <option>@reqruitmentStatus</option>
                        }
                    </select>
                    <ValidationMessage For="@(() => faculty.RecruitmentStatus)" />
                </div>
            </div>

            <div class="form-group row">
                <label for="releaseDate" class="col-sm-3 col-form-label"><b>Relesse Date: </b></label>
                <div class="col-sm-5">
                    <InputDate id="releaseDate" @bind-Value="faculty.ReleaseDate" @bind-Value:format="yyyy-MM-dd" class="form-control" />
                </div>
            </div>

            <div class="form-group row">
                <label for="hiringDocuments" class="col-sm-3 col-form-label"><b>Hiring Documents Copy:*</b></label>
                <div class="col-sm-5">
                    <InputFile OnChange="HandelFileSelected" @bind-Value="faculty.HIRING_DOCUMENTs"></InputFile>
                    @if (file != null)
                    {
                        <p>Name: @file.Name</p>
                        <p>Size in Bytes: @file.Size</p>
                        <p>File type: @file.Type</p>
                    }
                    <ValidationMessage For="@(() => faculty.HIRING_DOCUMENTs)" />
                </div>
            </div>
            <br />
            <br />
            <center>
                <button type="submit" class="button">Save</button>
                <a href="/Faculty/List" class="button" role="button">Cancel</a>
            </center>
        </EditForm>
        <br />
        <center><p>@message</p></center>
    </fieldset>
</form>
<br />
<br />

@code {

    string message;

    FACULTY faculty = new FACULTY();
    EMPLOYEE employee = new EMPLOYEE();

    // Needed to get attributes of each table
    private List<EMPLOYEE> employees = new List<EMPLOYEE>();
    private List<FACULTY> faculties = new List<FACULTY>();

    // Check why faculty.employeeId does not bind
    private string employeeId = String.Empty;

    //Execute when component starts / initializes
    protected override void OnInitialized()
    {
        employees = EmpService.GetEmployees();
        faculties = FacService.GetFaculties();
    }

    private void EditFaculty()
    {
        // Convert employeeId from string to int
        if (!String.IsNullOrEmpty(employeeId))
        {
            faculty.EmployeeId = Int32.Parse(employeeId);
        }

        FacService.EditFaculty(faculty);

        Console.WriteLine("OnValidSubmit");

        message = "Profile has been added successfully";

        // To empty the form, find more elegant way
        employee = new EMPLOYEE();
    }

    //Code for upload file filed

    IFileListEntry file;
    async Task HandelFileSelected(IFileListEntry[] files)
    {
        file = files.FirstOrDefault();
        if (file != null)
        {
            await fileUpload.UploadAsync(file);
        }
    }
}
