@*//This page to edit the faculty profile details

@page "/Profile/Edit/{Id:int}"

@layout ProvostLayout2

@using DAH_FIMS.Model
@using DAH_FIMS.Services
@using Microsoft.AspNetCore.Components.Forms
@using Syncfusion.Blazor.Inputs

@inject EmployeeService EmpService
@inject DepartmentService DepService
@inject FacultyService FacService
@inject SchoolService SchService
@inject PositionService PosService
@inject OfficesService OffService
@inject IFileUpload fileUpload

@inject DahFIMSDbContext db

<title>FIMS | Edit Profile</title>

<br />
<h4>Edit Profile</h4>
<br />
<form action="/" method="get" id="ProfileAdd">
    <fieldset>
        <EditForm Model="employee" OnValidSubmit="Editprofile">
            <DataAnnotationsValidator />
            <ValidationSummary />

            <div class="form-group row">
                <label for="firstName" class="col-sm-3 col-form-label"><b>First Name:*</b></label>
                <div class="col-sm-5">
                    <InputText type="text" id="firstName" @bind-Value="employee.FirstName" class="form-control" placeholder="Enter Fisrt Name" />
                    <ValidationMessage For="@(() => employee.FirstName)" />
                </div>
            </div>

            <div class="form-group row">
                <label for="lastName" class="col-sm-3 col-form-label"><b>Last Name:*</b></label>
                <div class="col-sm-5">
                    <InputText type="text" id="lastName" @bind-Value="employee.LastName" class="form-control" placeholder="Enter Last Name" />
                    <ValidationMessage For="@(() => employee.LastName)" />
                </div>
            </div>

            <div class="form-group row">
                <label for="mobile" class="col-sm-3 col-form-label"><b>Mobile Number:*</b></label>
                <div class="col-sm-5">
                    <InputText id="mobile" @bind-Value="faculty.MobileNumber" class="form-control" placeholder="00966xxxxxxxxx" />
                    <ValidationMessage For="@(() => faculty.MobileNumber)" />
                </div>
            </div>

            <div class="form-group row">
                <label for="emailAddress" class="col-sm-3 col-form-label"><b>Email Address:*</b></label>
                <div class="col-sm-5">
                    <InputText type="email" id="emailAddress" @bind-Value="employee.EmailAdress" class="form-control" placeholder="sam@example.com" />
                    <ValidationMessage For="@(() => employee.EmailAdress)" />
                </div>
            </div>

            <div class="form-group row">
                <label for="dateOfBirth" class="col-sm-3 col-form-label"><b>Date Of Birth:*</b></label>
                <div class="col-sm-5">
                    <InputDate id="dateOfBirth" @bind-Value="faculty.DateOfBirth" @bind-Value:format="yyyy-MM-dd" class="form-control" />
                    <ValidationMessage For="@(() => faculty.DateOfBirth)" />
                </div>
            </div>

            <div class="form-group row">
                <label class="col-form-label col-sm-3 pt-0"><b>Marital status:*</b></label>
                <div class="col-sm-7">
                    <div class="form-check form-check-inline">
                        <input class="form-check-input" type="radio" name="inlineRadioOptions" id="inlineRadio1" @bind="employee.FACULTY.Status">
                        <label class="form-check-label" for="inlineRadio1">
                            Single
                        </label>
                    </div>
                    <div class="form-check form-check-inline">
                        <input class="form-check-input" type="radio" name="inlineRadioOptions" id="inlineRadio2" @bind="employee.FACULTY.Status">
                        <label class="form-check-label" for="inlineRadio2">
                            Married
                        </label>
                    </div>
                </div>
            </div>

            <div class="form-group row">
                <label for="nationality" class="col-sm-3 col-form-label"><b>Nationality:*</b></label>
                <div class="col-sm-5">
                    <InputText type="text" id="nationality" @bind-Value="faculty.Nationality" class="form-control" />
                    <ValidationMessage For="@(() => faculty.Nationality)" />
                </div>
            </div>

            <div class="form-group row">
                <label for="highestEducation" class="col-sm-3 col-form-label"><b>Highest Education:*</b></label>
                <div class="col-sm-5">
                    <InputText type="text" id="highestEducation" @bind-Value="faculty.HighestEducation" class="form-control" />
                    <ValidationMessage For="@(() => faculty.HighestEducation)" />
                </div>
            </div>

            <div class="form-group row">
                <label for="institution" class="col-sm-3 col-form-label"><b>Institution:*</b></label>
                <div class="col-sm-5">
                    <InputText type="text" id="institution" @bind-Value="faculty.Institution" class="form-control" />
                    <ValidationMessage For="@(() => faculty.Institution)" />
                </div>
            </div>

            <div class="form-group row">
                <label for="division" class="col-sm-3 col-form-label"><b>Division:*</b></label>
                <div class="col-sm-5">
                    <InputText type="text" id="division" @bind-Value="faculty.Division" class="form-control" />
                    <ValidationMessage For="@(() => faculty.Division)" />
                </div>
            </div>

            <div class="form-group row">
                <label for="schoolName" class="col-sm-3 col-form-label"><b>School Name:*</b></label>
                <div class="col-sm-5">
                    <select id="schoolName" @bind="employee.Department.SchoolId" class="form-control">
                        <option selected>---Select a School---</option>
                        <option value="1">School of Business & Law</option>
                        <option value="2">School of Design & Architecture</option>
                        <option value="3">School of Health, Behavioral Sciences & Education</option>
                        <option value="4">School of Engineering, Computing & Informatics</option>
                    </select>
                </div>
            </div>

            <div class="form-group row">
                <label for="department" class="col-sm-3 col-form-label"><b>Department Name:*</b></label>
                <div class="col-sm-5">
                    <InputSelect @bind-Value="employee.DepartmentId" id="department" class="form-control">
                        <option value="">---Select a Department---</option>
                        @foreach (var department in departments)
                        {
                            <option value="@department.DepartmentId">@department.DepartmentName</option>
                        }
                    </InputSelect>
                    <ValidationMessage For="@(() => department.DepartmentName)" />
                </div>
            </div>

            <div class="form-group row">
                <label for="position" class="col-sm-3 col-form-label"><b>Position Title:*</b></label>
                <div class="col-sm-5">
                    <InputSelect @bind-Value="employee.PositionId" id="position" class="form-control">
                        <option value="">---Select a Position---</option>
                        @foreach (var position in positions)
                        {
                            <option value="@position.PositionId">@position.PositionTitle</option>
                        }
                    </InputSelect>
                    <ValidationMessage For="@(() => position.PositionTitle)" />
                </div>
            </div>

            <div class="form-group row">
                <label for="typeOfContract" class="col-sm-3 col-form-label"><b>Type of Contract:*</b></label>
                <div class="col-sm-5">
                    <InputText type="text" id="typeOfContract" @bind-Value="faculty.TypeOfContract" class="form-control" />
                    <ValidationMessage For="@(() => faculty.TypeOfContract)" />
                </div>
            </div>

            <div class="form-group row">
                <label for="phoneExtension" class="col-sm-3 col-form-label"><b>Phone Extension:*</b></label>
                <div class="col-sm-5">
                    <InputText id="phoneExtension" @bind-Value="employee.PhoneExtension" class="form-control" />
                    <ValidationMessage For="@(() => employee.PhoneExtension)" />
                </div>
            </div>

            <div class="form-group row">
                <label for="officeNumber" class="col-sm-3 col-form-label"><b>Office Number:*</b></label>
                <div class="col-sm-5">
                    <InputSelect @bind-Value="employee.OfficeId" id="officeNumber" class="form-control">
                        <option value="">---Select an Office---</option>
                        @foreach (var office in offices)
                        {
                            <option value="@office.OfficeId">@office.OfficeNumber</option>
                        }
                    </InputSelect>
                    <ValidationMessage For="@(() => office.OfficeNumber)" />
                </div>
            </div>

            <div class="form-group row">
                <label for="dateNeeded" class="col-sm-3 col-form-label"><b>Date Needed:*</b></label>
                <div class="col-sm-5">
                    <InputDate id="dateNeeded" @bind-Value="faculty.DateNeeded" @bind-Value:format="yyyy-MM-dd" class="form-control" />
                    <ValidationMessage For="@(() => faculty.DateNeeded)" />
                </div>
            </div>

            <div class="form-group row">
                <label for="reqruitmentStatus" class="col-sm-3 col-form-label"><b>Reqruitment Status:*</b></label>
                <div class="col-sm-5">
                    <select @bind="faculty.RecruitmentStatus" id="reqruitmentStatus" class="form-control">
                        <option value="">---Select Profile Status---</option>
                        @foreach (var reqruitmentStatus in Enum.GetNames(typeof(ReqrutimentStatus)))
                        {
                            <option>@reqruitmentStatus</option>
                        }
                    </select>
                    <ValidationMessage For="@(() => faculty.RecruitmentStatus)" />
                </div>
            </div>

            <div class="form-group row">
                <label for="applicationDate" class="col-sm-3 col-form-label"><b>Application Date:*</b></label>
                <div class="col-sm-5">
                    <InputDate id="applicationDate" @bind-Value="faculty.ApplicationDate" @bind-Value:format="yyyy-MM-dd" class="form-control" />
                    <ValidationMessage For="@(() => faculty.ApplicationDate)" />
                </div>
            </div>

            <div class="form-group row">
                <label for="hiringDate" class="col-sm-3 col-form-label"><b>Hiring Date: </b></label>
                <div class="col-sm-5">
                    <InputDate id="hiringDate" @bind-Value="faculty.HiringDate" @bind-Value:format="yyyy-MM-dd" class="form-control" />
                </div>
            </div>

            <div class="form-group row">
                <label for="rank" class="col-sm-3 col-form-label"><b>Rank:*</b></label>
                <div class="col-sm-5">
                    <select @bind="faculty.Rank" id="rank" class="form-control">
                        <option value="">---Select Faculty Rank---</option>
                        @foreach (var rank in Enum.GetNames(typeof(Rank)))
                        {
                            <option>@rank</option>
                        }
                    </select>
                    <ValidationMessage For="@(() => faculty.Rank)" />
                </div>
            </div>

            <div class="form-group row">
                <label for="requiredLoad" class="col-sm-3 col-form-label"><b>Required Load:</b></label>
                <div class="col-sm-5">
                    <InputNumber id="requiredLoad" @bind-Value="faculty.RequiredLoad" class="form-control" />
                </div>
            </div>

            <div class="form-group row">
                <label for="conversionRate" class="col-sm-3 col-form-label"><b>Conversion Rate:</b></label>
                <div class="col-sm-5">
                    <InputNumber id="requiredLoad" @bind-Value="faculty.ConversionRate" class="form-control" />
                </div>
            </div>

            <div class="form-group row">
                <label for="releaseDate" class="col-sm-3 col-form-label"><b>Relesse Date: </b></label>
                <div class="col-sm-5">
                    <InputDate id="releaseDate" @bind-Value="faculty.ReleaseDate" @bind-Value:format="yyyy-MM-dd" class="form-control" />
                </div>
            </div>

            <div class="form-group row">
                <label for="hiringDocuments" class="col-sm-3 col-form-label"><b>Hiring Documents Copy:*</b></label>
                <div class="col-sm-5">
                    <InputFile OnChange="HandelFileSelected"></InputFile>
                    @if (file != null)
                    {
                        <p>Name: @file.Name</p>
                        <p>Size in Bytes: @file.Size</p>
                        <p>File type: @file.Type</p>
                    }
                </div>
            </div>

            <div class="form-group row">
                <label for="hiringDocuments" class="col-sm-3 col-form-label">Hiring Documents Copy:*</label>
                <div class="col-sm-5">
                    <div class="control_wrapper">
                        <SfUploader ID="UploadFiles" DropArea=".control-fluid">
                            <UploaderEvents OnRemove="OnFileRemove"></UploaderEvents>
                            <UploaderAsyncSettings SaveUrl="https://aspnetmvc.syncfusion.com/services/api/uploadbox/Save" RemoveUrl="https://aspnetmvc.syncfusion.com/services/api/uploadbox/Remove"></UploaderAsyncSettings>
                        </SfUploader>
                    </div>
                </div>
            </div>
            <br />
            <br />
            <center>
                <button type="submit" class="button">Save</button>
                <a href="/Faculty/List" class="button" role="button">Cancel</a>
            </center>
        </EditForm>
        <br />
        <center><p>@message</p></center>
    </fieldset>
</form>
<br />


@code {

    [Parameter]
    public int Id { get; set; }

    string message;

    EMPLOYEE employee = new EMPLOYEE();
    FACULTY faculty = new FACULTY();
    DEPARTMENT department = new DEPARTMENT();
    POSITION position = new POSITION();
    OFFICE office = new OFFICE();


    // Needed to get attributes of each table
    private List<EMPLOYEE> employees = new List<EMPLOYEE>();
    private List<FACULTY> faculties = new List<FACULTY>();
    private List<DEPARTMENT> departments = new List<DEPARTMENT>();
    private List<POSITION> positions = new List<POSITION>();
    private List<OFFICE> offices = new List<OFFICE>();

    // Check why employee.departmentId, positionId, officeId does not bind
    private string departmentId = String.Empty;
    private string positionId = String.Empty;
    private string officeId = String.Empty;
    //private string deptName;

    //Execute when component starts / initializes
    protected override void OnInitialized()
    {
        employees = EmpService.GetEmployees();
        faculties = FacService.GetFaculties();
        departments = DepService.GetDepartments();
        positions = PosService.GetPositions();
        offices = OffService.GetOffices();

        employee = EmpService.GetEmployee(Id);
        //deptName = DepService.GetDepartmentName(Id);

        faculty = FacService.GetFaculty(Id);
        department = DepService.GetDepartment(Id);
        position = PosService.GetPosition(Id);
        office = OffService.GetOffice(Id);
    }

    // Edit the profile
    public void Editprofile()
    {
        EmpService.Editprofile(employee);

        message = "Faculty information updated successfully";
    }

    //Code for upload file filed

    public void OnFileRemove(RemovingEventArgs args)
    {
        args.PostRawFile = false;
    }

    IFileListEntry file;
    async Task HandelFileSelected(IFileListEntry[] files)
    {
        file = files.FirstOrDefault();
        if (file != null)
        {
            await fileUpload.UploadAsync(file);
        }
    }
}*@