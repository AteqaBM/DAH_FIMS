@*//This page to add part 1 of the faculty profile *@

@page "/ProfileOne/Edit/{Id:int}"

@layout ProvostLayout2

@using DAH_FIMS.Model
@using DAH_FIMS.Services
@using Microsoft.AspNetCore.Components.Forms

@inject EmployeeService EmpService
@inject DepartmentService DepService
@inject PositionService PosService
@inject OfficesService OffService
@inject FacultyService FacService


@inject DahFIMSDbContext db

<title>FIMS | Edit Profile(P1)</title>

<br />
<h4>Add Profile</h4>
<br />
<form action="/" method="get" id="ProfileAdd">
    <fieldset>
        <EditForm Model="employee" OnValidSubmit="Editprofile">
            <DataAnnotationsValidator />
            <ValidationSummary />

            <div class="form-group row">
                <label for="firstName" class="col-sm-4 col-form-label"><b>First Name:*</b></label>
                <div class="col-sm-5">
                    <InputText type="text" id="firstName" @bind-Value="employee.FirstName" class="form-control" placeholder="Enter Fisrt Name" />
                    <ValidationMessage For="@(() => employee.FirstName)" />
                </div>
            </div>

            <div class="form-group row">
                <label for="lastName" class="col-sm-4 col-form-label"><b>Last Name:*</b></label>
                <div class="col-sm-5">
                    <InputText type="text" id="lastName" @bind-Value="employee.LastName" class="form-control" placeholder="Enter Last Name" />
                    <ValidationMessage For="@(() => employee.LastName)" />
                </div>
            </div>

            <div class="form-group row">
                <label for="emailAddress" class="col-sm-4 col-form-label"><b>Email Address:*</b></label>
                <div class="col-sm-5">
                    <InputText type="email" id="emailAddress" @bind-Value="employee.EmailAdress" class="form-control" placeholder="sam@example.com" />
                    <ValidationMessage For="@(() => employee.EmailAdress)" />
                </div>
            </div>

            @*<div class="form-group row">
                <label for="position" class="col-sm-4 col-form-label"><b>Position Title:*</b></label>
                <div class="col-sm-5">
                    <InputSelect @bind-Value="employee.PositionId" id="position" class="form-control">
                        <option value="">---Select a Position---</option>
                        @foreach (var position in positions)
                        {
                            <option value="@position.PositionId">@position.PositionTitle</option>
                        }
                    </InputSelect>
                    <ValidationMessage For="@(() => position.PositionTitle)" />
                </div>
            </div>*@

            <div class="form-group row">
                <label for="schoolName" class="col-sm-4 col-form-label"><b>School Name:*</b></label>
                <div class="col-sm-5">
                    <select id="schoolName" @bind="employee.Department.SchoolId" class="form-control">
                        <option selected>---Select a School---</option>
                        <option value="1">School of Business & Law</option>
                        <option value="2">School of Design & Architecture</option>
                        <option value="3">School of Health, Behavioral Sciences & Education</option>
                        <option value="4">School of Engineering, Computing & Informatics</option>
                    </select>
                </div>
            </div>

            @*<div class="form-group row">
                <label for="department" class="col-sm-4 col-form-label"><b>Department Name:*</b></label>
                <div class="col-sm-5">
                    <InputSelect @bind-Value="employee.DepartmentId" id="department" class="form-control">
                        <option value="">---Select a Department---</option>
                        @foreach (var department in departments)
                        {
                            <option value="@department.DepartmentId">@department.DepartmentName</option>
                        }
                    </InputSelect>
                    <ValidationMessage For="@(() => department.DepartmentName)" />
                </div>
            </div>*@

            @*<div class="form-group row">
                <label for="officeNumber" class="col-sm-4 col-form-label"><b>Office Number:*</b></label>
                <div class="col-sm-5">
                    <InputSelect @bind-Value="employee.OfficeId" id="officeNumber" class="form-control">
                        <option value="">---Select an Office---</option>
                        @foreach (var office in offices)
                        {
                            <option value="@office.OfficeId">@office.OfficeNumber</option>
                        }
                    </InputSelect>
                    <ValidationMessage For="@(() => office.OfficeNumber)" />
                </div>
            </div>*@


            <div class="form-group row">
                <label for="phoneExtension" class="col-sm-4 col-form-label"><b>Phone Extension:*</b></label>
                <div class="col-sm-5">
                    <InputText id="phoneExtension" @bind-Value="employee.PhoneExtension" class="form-control" />
                    <ValidationMessage For="@(() => employee.PhoneExtension)" />
                </div>
            </div>

            <center><p>------------------------------------------------------------------------------</p></center>

            <div class="form-group row">
                <label for="partTime" class="col-sm-4 col-form-label">
                    <b>Is it Part Time:*</b><br />
                    (If Yes Check the Box)
                </label>
                <div class="col-sm-7">
                    <InputCheckbox id="partTime" @bind-Value="employee.IsItPartTime" />
                </div>
            </div>

            <div class="form-group row">
                <label for="acceptNotification" class="col-sm-4 col-form-label">
                    <b>Accept Email Notification:*</b><br />
                    (If Yes Check the Box)
                </label>
                <div class="col-sm-7">
                    <InputCheckbox id="acceptNotification" @bind-Value="employee.AcceptEmailNotification" />
                </div>
            </div>
            <br />
            <br />
            <center>
                <button type="submit" class="button">Save</button>
                <a href="/Faculty/List" class="button" role="button">Cancel</a>
            </center>
            <a href="ProfileTwo/Edit/" style="position:absolute; right:300px"><span class="oi oi-arrow-circle-right"></span></a>
        </EditForm>
        <br />
        <center><p>@message</p></center>
    </fieldset>
</form>
<br />


@code {

    [Parameter]
    public int Id { get; set; }

    string message;

    EMPLOYEE employee = new EMPLOYEE();
    FACULTY faculty = new FACULTY();
    DEPARTMENT department = new DEPARTMENT();
    POSITION position = new POSITION();
    OFFICE office = new OFFICE();


    // Needed to get attributes of each table
    private List<EMPLOYEE> employees = new List<EMPLOYEE>();
    private List<FACULTY> faculties = new List<FACULTY>();
    private List<DEPARTMENT> departments = new List<DEPARTMENT>();
    private List<POSITION> positions = new List<POSITION>();
    private List<OFFICE> offices = new List<OFFICE>();

    // Check why employee.departmentId, positionId, officeId does not bind
    private string departmentId = String.Empty;
    private string positionId = String.Empty;
    private string officeId = String.Empty;
    //private string deptName;

    //Execute when component starts / initializes
    protected override void OnInitialized()
    {
        employees = EmpService.GetEmployees();
        faculties = FacService.GetFaculties();
        departments = DepService.GetDepartments();
        positions = PosService.GetPositions();
        offices = OffService.GetOffices();

        employee = EmpService.GetEmployee(Id);
        //deptName = DepService.GetDepartmentName(Id);

        faculty = FacService.GetFaculty(Id);
        department = DepService.GetDepartment(Id);
        position = PosService.GetPosition(Id);
        office = OffService.GetOffice(Id);
    }

    // Edit the profile
    public void Editprofile()
    {
        EmpService.Editprofile(employee);

        message = "Press The Right Arrow To Move To The Next Page";
    }


}
